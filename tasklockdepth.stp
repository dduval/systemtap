/*
 * By Dominic Duval, Red Hat Inc.
 * dduval@redhat.com
 * 
 * tasklockdepth.stp :
 *
 * Uses the profile probe to find processes that hold the BKL.
 *
 * USAGE: stap tasklockdepth.stp
 *
 */

global start

function getlockdepth() {
  return  @cast(task_current(), "task_struct")->lock_depth
}

probe begin {
  start = gettimeofday_us()
  printf("Starting script.\n")
}

function timestamp() {
  return gettimeofday_us() - start
}

probe timer.profile {
  fn = probefunc ()
  ld = getlockdepth()
  if ( fn != "mwait_idle" && ld >= 0 )
    printf("[CPU %d] At %d us , PID: %8d (%20s) Depth: %d Function: %32s \n",
           cpu(), timestamp(), pid(), execname(), ld, fn)
}
